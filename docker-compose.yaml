services:
  trino:
    container_name: trino
    build:
      context: ./trino
      dockerfile: Dockerfile
      args:
        TRINO_VERSION: ${TRINO_VERSION}
    ports:
      - '8080:8080'
      - "2222:22"
    volumes:
      - ./trino/etc/config.properties:/opt/trino/etc/config.properties:ro
      - ./trino/etc/jvm.config:/opt/trino/etc/jvm.config:ro
      - ./trino/etc/log.properties:/opt/trino/etc/log.properties:ro
      - ./trino/etc/node.properties:/opt/trino/etc/node.properties:ro
      - ./trino/logs:/var/log/trino/data
      - ./trino/catalog:/opt/trino/etc/trino/catalog
      - ./trino/init:/app/init
    depends_on:
      - postgres
      - mariadb
      - hive-metastore
    networks:
      dahbest:
        ipv4_address: 172.80.0.80

  dbt:
    build:
      context: ./dbt
      dockerfile: Dockerfile
    container_name: dbt
    volumes:
      - ./dbt/project:/dbt/project
      - ./dbt/profiles:/dbt/profiles
    ports:
      - "2223:22"
    depends_on:
      - trino
      - postgres
    networks:
      dahbest:
        ipv4_address: 172.80.0.79

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: airflow_db
    ports:
      - '5432:5432'
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data
      - ./postgres/query_init/jaffle_shop_postgres.sql:/docker-entrypoint-initdb.d/jaffle_shop_postgres.sql:ro
      - ./postgres/query_init/jaffle_shop_sc.sql:/docker-entrypoint-initdb.d/jaffle_shop_sc.sql:ro
    restart: always
    networks:
      dahbest:
        ipv4_address: 172.80.0.10

  mariadb:
    hostname: mariadb
    container_name: mariadb
    image: mariadb:10.5.8
    ports:
      - 3306:3306
    volumes:
      - ./mariadb/mariadb_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_USER: $MYSQL_USER
      MYSQL_PASSWORD: $MYSQL_PASSWORD
      MYSQL_DATABASE: metastore_db
    networks:
      - dahbest

  hive-metastore:
    container_name: hive-metastore
    build: 
      context: ./hive-metastore
      dockerfile: Dockerfile
    hostname: hive-metastore
    ports:
      - 9083:9083
    volumes:
      - ./hive-metastore/conf/metastore-site.xml:/opt/apache-hive-metastore-3.1.3-bin/conf/metastore-site.xml:ro
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    environment:
      METASTORE_DB_HOSTNAME: mariadb
      METASTORE_TYPE: mysql
    depends_on:
      - mariadb
    networks:
      - dahbest

  minio:
    hostname: minio
    container_name: minio
    build:
      context: ./minio
      dockerfile: Dockerfile
    ports:
      - 9000:9000
      - 9001:9001
    volumes:
      - ./minio/minio_data:/data
    environment:
      MINIO_ROOT_USER: ${MINIO_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_USER_PASSWORD}
      MINIO_DOMAIN: minio 
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID} 
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY} 
      AWS_REGION: ${AWS_REGION}
    command: server --console-address ":9001" /data
    networks:
      dahbest:
        aliases:
          - minio
        ipv4_address: 172.80.0.25
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/ready"]
      interval: 30s
      timeout: 20s
      retries: 3

  airflow:
    container_name: airflow
    build:
      context: ./airflow
      dockerfile: Dockerfile
      args:
        AIRFLOW_VERSION: ${AIRFLOW_VERSION}
    ports:
      - "9090:9090"
    volumes:
      - ./airflow/logs:/root/airflow/logs
      - ./airflow/dags:/root/airflow/dags
    depends_on:
      - postgres
    networks:
      dahbest:
        ipv4_address: 172.80.0.11

networks:
  dahbest:
    external: true